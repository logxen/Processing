<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>PCheckBox</name>

<category>
UI
</category>

<subcategory>
</subcategory>

<example>
<image>PCheckBox.png</image>
<code>
PCheckBox option;
PFont font;
String msg;

void setup() {
  option = new PCheckBox(false);
  option.setBounds((width - 20) / 2, 
                   (height - 20) / 2, 
                   20, 20);
  
  font = loadFont();
  msg = "";
  textFont(font);
  textAlign(CENTER);
}

void draw() {
  background(200);
  option.draw();
  fill(0);
  text(msg, width / 2, 
       option.y + option.height + 4 + font.baseline);
}

void keyPressed() {
  option.keyPressed();
}

void keyReleased() {
  option.keyReleased();
}

void libraryEvent(Object library, int event, Object data) {
  if (library == option) {
    if (option.checked) {
      msg = "Checked!";
    } else {
      msg = "Not checked anymore";
    }
  }
}
</code>
</example>

<description>
A check box component.  Does not include a text label, use PLabel
to draw a label next to it.  The bounds of the component represent
the size of the checkbox.
</description>

<field>
  <fname>checked</fname>
  <fdescription>True if the check box has been "checked"</fdescription>
</field>

<method>
  <mname>keyPressed()</mname>
  <mdescription>Handles pressing and selecting/de-selecting this checkbox
 when the FIRE button is pressed.</mdescription>
</method>
<method>
  <mname>keyReleased()</mname>
  <mdescription>Releases the pressed state of this checkbox when the FIRE button is
 released.</mdescription>
</method>

<constructor>
PCheckBox(<c>checked</c>)
</constructor>

<cparameter>
  <clabel>checked</clabel>
  <cdescription>the initial state of this checkbox</cdescription>
</cparameter>

<related>
</related>

</root>
