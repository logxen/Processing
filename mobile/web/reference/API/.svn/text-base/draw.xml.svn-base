<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>draw()</name>

<category>Structure</category>

<subcategory>Execution</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<applet></applet>
<code>
int yPos = 0; 

void setup() { 
  size(200, 200); 
  framerate(30);
} 
 
void draw() { 
  background(204);
  yPos = yPos - 1;
  if(yPos &lt; 0) {
    yPos = height;
  }
  line(0, yPos, width, yPos);
} 

</code>
</example>

<example>
<image></image>
<applet></applet>
<code>
void setup() {
  size(200, 200);
}

void draw() { }

void keyPressed() {
  println(key);
}

</code>
</example>

<description>
Called directly after <b>setup()</b> and continuously executes the lines of code contained inside its block until the program is stopped or <b>noLoop()</b> is called. <b>draw()</b> is called automatically and should never be called explicitly. It should always be controlled with <b>noLoop()</b>, <b>redraw()</b> and <b>loop()</b>. After <b>noLoop()</b> stops the code in <b>draw()</b> from executing, <b>redraw()</b> causes the code inside <b>draw()</b> to execute once and <b>loop()</b> will causes the code inside <b>draw()</b> to execute continuously again. The number of times <b>draw()</b> executes in each second may be controlled with the <b>delay()</b> and <b>framerate()</b> functions. There can only be one <b>draw()</b> function for each sketch and <b>draw()</b> must exist if you want the code to run continuously or to process events such as <b>keyPressed()</b>. Sometimes, you might have an empty call to <b>draw()</b> in your program as shown in the above example. 
</description>

<syntax>
draw() {
  <c>statements</c>
}
</syntax>

<parameter>
<label>statements</label>
<description>A sequence of statements</description>
</parameter>

<returns>None</returns>

<related>
setup()
loop()
noLoop()
</related>

<availability>1.0</availability>

<type>Processing Function</type>

<partof>PDE</partof>








</root>
