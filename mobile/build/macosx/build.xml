<?xml version="1.0" encoding="UTF-8"?>

<!-- base dir set to parent of mobile directory, i.e:
     parent <- basedir
        mobile
            build
                macosx
        processing
        
     processing will be checked out into the parent directory, if it doesn't exist -->     
<project name="mobile-macosx" default="dist" basedir="../../..">
    <!-- set platform -->
    <property name="platform" value="macosx" />
    
    <!-- copy platform specific launcher files -->
    <target name="copyplatformlaunchersrc">
        <copy todir="processing/build/macosx/dist/Processing.app/Contents/Resources" overwrite="true">
            <fileset dir="mobile/build/macosx/dist/Processing.app/Contents/Resources">
                <include name="**/*.icns"/>
            </fileset>
        </copy>
        <copy overwrite="true" file="mobile/build/macosx/dist/Processing.app/Contents/Info.plist" tofile="processing/build/macosx/dist/Processing.app/Contents/Info.plist" />
        <!-- copy cldc/midp jars from Sun WTK for Windows into lib -->
        <copy overwrite="true" file="mobile/build/macosx/lib/cldcapi10.jar" todir="processing/build/shared/lib"/>
        <copy overwrite="true" file="mobile/build/macosx/lib/cldcapi11.jar" todir="processing/build/shared/lib"/>
        <copy overwrite="true" file="mobile/build/macosx/lib/midpapi10.jar" todir="processing/build/shared/lib"/>        
        <copy overwrite="true" file="mobile/build/macosx/lib/midpapi20.jar" todir="processing/build/shared/lib"/>
    </target>

    <target name="dist" depends="init, copyappsrc, copylaunchersrc">     
        <!-- copy modified dist.sh -->
        <copy file="mobile/build/macosx/dist.sh" tofile="processing/build/macosx/dist.sh" overwrite="true"/>
        <!-- execute dist.sh shell script in processing build dir. -->
        <exec executable="/bin/bash">
            <arg value="--login"/>
            <arg value="-c"/>
            <arg value="cd ${parent.dir}/processing/build/macosx; chmod +x dist.sh; ./dist.sh"/>
        </exec>
        <!-- delete the zip files- we need to copy our stuff in and re-zip -->
        <delete file="processing/build/macosx/${svn.tag.processing}.zip"/>
        <!-- remake documentation -->
        <antcall target="copycore">
            <param name="target" value="${svn.tag.processing}/Processing ${processing.version}"/>
        </antcall>
        <antcall target="copylibs">
            <param name="target" value="${svn.tag.processing}/Processing ${processing.version}"/>
        </antcall>
        <antcall target="copydocs">
            <param name="target" value="${svn.tag.processing}/Processing ${processing.version}"/>
        </antcall>
        <!-- rename executable -->
        <move todir="processing/build/macosx/${svn.tag.processing}/Processing ${processing.version}/Mobile.app">
            <fileset dir="processing/build/macosx/${svn.tag.processing}/Processing ${processing.version}/Processing ${processing.version}.app"/>
        </move>
        <!-- rename directories -->
        <move todir="processing/build/macosx/mobile-${mobile.version}/Mobile-${mobile.version}">
            <fileset dir="processing/build/macosx/${svn.tag.processing}/Processing ${processing.version}"/>
        </move>
        <!-- move critical files out of the app package and back into lib dir -->
        <move todir="processing/build/macosx/mobile-${mobile.version}/Mobile-${mobile.version}/lib">
            <fileset dir="processing/build/macosx/mobile-${mobile.version}/Mobile-${mobile.version}/Mobile.app/Contents/Resources/Java">
                <include name="proguard.jar"/>
                <include name="me-applet.jar"/>
                <include name="large.jar"/>
                <include name="qvga.jar"/>
                <include name="cldcapi10.jar"/>
                <include name="cldcapi11.jar"/>
                <include name="midpapi10.jar"/>
                <include name="midpapi20.jar"/>
            </fileset>
        </move>
        <!-- finally, zip up the release -->
        <antcall target="mkzip" />
    </target>
    
    <target name="mkzip" depends="init">
        <!-- zip up release, using command-line zip to preserve file permissions (execute bit in particular) -->
        <exec executable="zip" dir="processing/build/macosx/mobile-${mobile.version}">
            <arg value="-R" />
            <arg value="../mobile-${mobile.version}-macosx.zip" />
            <arg value="*" />
        </exec>
   </target>
    
    <!-- target for making a Mac OS disk image -->
    <target name="mkdmg" depends="init">
        <!-- delete existing image, if any -->
        <delete file="processing/build/macosx/mobile-${mobile.version}.dmg" failonerror="false"/>
        <!-- execute mkdmg to create archive -->
        <exec executable="${sh.executable}">
            <arg value="--login"/>
            <arg value="-c"/>
            <arg value="cd ${parent.dir}/processing/build/macosx; ./mkdmg mobile-${mobile.version}"/>
        </exec>
    </target>
    
    <!-- preverify using the mpp-sdk preverify -->
    <target name="preverify">
        <mkdir dir="${dest}"/>
        <exec executable="${wtk.dir}/osx/preverify/preverify">
            <arg value="-classpath"/>
            <arg path="${bootClassPath};${classPath}"/>
            <arg value="-d"/>
            <arg path="${dest}"/>
            <arg path="${src}"/>
        </exec>
    </target>
    
    <!-- import shared build file -->
    <import file="../build.xml" />
    
</project>
