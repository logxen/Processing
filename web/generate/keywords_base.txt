# KEY

# LITERAL2 - constants
# KEYWORD1 - Java datatypes and keywords
# KEYWORD2 - functions
# KEYWORD3 - methods (functions inside a class)
# KEYWORD4 - fields (variables inside a class)
# KEYWORD5 - Processing variables (width, height, focused, etc.)

#

# LITERAL2 specifies constants

ADD	LITERAL2	blend_
ALIGN_CENTER	LITERAL2	
ALIGN_LEFT	LITERAL2	
ALIGN_RIGHT	LITERAL2	
ALPHA	LITERAL2
ALPHA_MASK	LITERAL2
ALT	LITERAL2
AMBIENT	LITERAL2	
ARROW	LITERAL2	cursor_
ARGB	LITERAL2
BACKSPACE	LITERAL2	keyCode
BASELINE	LITERAL2	textAlign_
BEVEL	LITERAL2	strokeJoin_
BLEND	LITERAL2	blend_
BLUE_MASK	LITERAL2
BLUR	LITERAL2	filter_
BOTTOM	LITERAL2	textAlign_
BURN	LITERAL2	blend_
CENTER	LITERAL2	
CHATTER	LITERAL2
CLOSE	LITERAL2
CMYK	LITERAL2
CODED	LITERAL2	key
COMPLAINT	LITERAL2
COMPOSITE	LITERAL2
COMPONENT	LITERAL2
CONCAVE_POLYGON	LITERAL2
CONTROL	LITERAL2
CONVEX_POLYGON	LITERAL2
CORNER	LITERAL2	textAlign_
CORNERS	LITERAL2
CROSS	LITERAL2	cursor_
CUSTOM	LITERAL2
DARKEST	LITERAL2	blend_
DEGREES	LITERAL2
DEG_TO_RAD	LITERAL2
DELETE	LITERAL2
DIAMETER	LITERAL2
DIFFERENCE	LITERAL2	blend_
DIFFUSE	LITERAL2
DILATE	LITERAL2	filter_
DIRECTIONAL	LITERAL2
DISABLE_ACCURATE_TEXTURES	LITERAL2
DISABLE_DEPTH_SORT	LITERAL2
DISABLE_DEPTH_TEST	LITERAL2
DISABLE_NATIVE_FONTS	LITERAL2
DISABLE_OPENGL_ERROR_REPORT	LITERAL2
DISABLE_OPENGL_2X_SMOOTH	LITERAL2
DISABLE_OPENGL_4X_SMOOTH	LITERAL2
DISABLE_TEXT_SMOOTH	LITERAL2	
DISABLED	LITERAL2
DODGE	LITERAL2	blend_
DOWN	LITERAL2	keyCode
DXF	LITERAL2	size_
ENABLE_ACCURATE_TEXTURES	LITERAL2
ENABLE_DEPTH_SORT	LITERAL2
ENABLE_DEPTH_TEST	LITERAL2
ENABLE_NATIVE_FONTS	LITERAL2
ENABLE_OPENGL_2X_SMOOTH	LITERAL2
ENABLE_OPENGL_4X_SMOOTH	LITERAL2
ENABLE_OPENGL_ERROR_REPORT	LITERAL2
ENTER	LITERAL2	keyCode
EPSILON	LITERAL2
ERODE	LITERAL2	filter_
ESC	LITERAL2	keyCode
EXCLUSION	LITERAL2	blend_
GIF	LITERAL2
GRAY	LITERAL2	filter_
GREEN_MASK	LITERAL2
GROUP	LITERAL2
HALF	LITERAL2	
HALF_PI	LITERAL2	HALF_PI
HAND	LITERAL2	cursor_
HARD_LIGHT	LITERAL2	blend_
HINT_COUNT	LITERAL2
HSB	LITERAL2	colorMode_
IMAGE	LITERAL2	textureMode_
INVERT	LITERAL2	filter_
JPEG	LITERAL2	
LEFT	LITERAL2	keyCode
LIGHTEST	LITERAL2	blend_
LINES	LITERAL2	beginShape_
LINUX	LITERAL2
MACOSX	LITERAL2
MAX_FLOAT	LITERAL2
MAX_INT	LITERAL2	
MITER	LITERAL2	stokeJoin_
MODEL	LITERAL2
MOVE	LITERAL2	cursor_
MULTIPLY	LITERAL2	blend_
NORMAL	LITERAL2	
NORMALIZED	LITERAL2	textureMode_
NO_DEPTH_TEST	LITERAL2
NTSC	LITERAL2
ONE	LITERAL2	
OPAQUE	LITERAL2	filter_
OPEN	LITERAL2
ORTHOGRAPHIC	LITERAL2
OVERLAY	LITERAL2	blend_
PAL	LITERAL2
PDF	LITERAL2	size_
P2D	LITERAL2	size_
P3D	LITERAL2	size_
PERSPECTIVE	LITERAL2
PI	LITERAL2	PI
PIXEL_CENTER	LITERAL2
POINT	LITERAL2
POINTS	LITERAL2	
POSTERIZE	LITERAL2	filter_
PROBLEM	LITERAL2	
PROJECT	LITERAL2	strokeCap_
QUAD_STRIP	LITERAL2	beginShape_
QUADS	LITERAL2	beginShape_
QUARTER_PI	LITERAL2	QUARTER_PI
RAD_TO_DEG	LITERAL2
RADIUS	LITERAL2
RADIANS	LITERAL2
RED_MASK	LITERAL2
REPLACE	LITERAL2	
RETURN	LITERAL2
RGB	LITERAL2	colorMode_
RIGHT	LITERAL2	keyCode
ROUND	LITERAL2	strokeCap_
SCREEN	LITERAL2	blend_
SECAM	LITERAL2	
SHIFT	LITERAL2	
SPECULAR	LITERAL2
SOFT_LIGHT	LITERAL2	blend_
SQUARE	LITERAL2	strokeCap_
SUBTRACT	LITERAL2	blend_
SVIDEO	LITERAL2	
TAB	LITERAL2	keyCode
TARGA	LITERAL2
TEXT	LITERAL2	cursor_
TFF	LITERAL2
THIRD_PI	LITERAL2
THRESHOLD	LITERAL2	filter_
TIFF	LITERAL2
TOP	LITERAL2	textAlign_
TRIANGLE_FAN	LITERAL2	beginShape_
TRIANGLES	LITERAL2	beginShape_
TRIANGLE_STRIP	LITERAL2	beginShape_
TUNER	LITERAL2
TWO	LITERAL2
TWO_PI	LITERAL2	TWO_PI
UP	LITERAL2	keyCode
WAIT	LITERAL2	cursor_
WHITESPACE	LITERAL2		


# KEYWORD1 specifies datatypes and keywords

Array	KEYWORD1	Array
ArrayList	KEYWORD1	ArrayList
Boolean	KEYWORD1	
Byte	KEYWORD1	
BufferedReader	KEYWORD1	BufferedReader
Character	KEYWORD1	
Class	KEYWORD1	class
Double	KEYWORD1	
Float	KEYWORD1	
Integer	KEYWORD1	
HashMap	KEYWORD1	HashMap
PrintWriter	KEYWORD1	PrintWriter
String	KEYWORD1	String
StringBuffer	KEYWORD1	
Thread	KEYWORD1		
abstract	KEYWORD1
assert	KEYWORD1
boolean	KEYWORD1	boolean
break	KEYWORD1	break
byte	KEYWORD1	byte
case	KEYWORD1	case
catch	KEYWORD1	catch
char	KEYWORD1	char
class	KEYWORD1	class
continue	KEYWORD1	continue
default	KEYWORD1	default
do	KEYWORD1	
double	KEYWORD1	double
else	KEYWORD1	else
enum	KEYWORD1	
extends	KEYWORD1	extends
false	KEYWORD1	false
final	KEYWORD1	final
finally	KEYWORD1
for	KEYWORD1	for
float 	KEYWORD1	float
if	KEYWORD1	if
implements	KEYWORD1	implements
import	KEYWORD1	import
instanceof	KEYWORD1
int	KEYWORD1	int
interface	KEYWORD1	
long	KEYWORD1	long
native	KEYWORD1
new	KEYWORD1	new
null	KEYWORD1	null
package	KEYWORD1	
private	KEYWORD1	private
protected	KEYWORD1	
public	KEYWORD1	public
return	KEYWORD1	return
short	KEYWORD1	
static	KEYWORD1	static
strictfp	KEYWORD1
super	KEYWORD1	super
switch	KEYWORD1	switch
synchronized	KEYWORD1
this	KEYWORD1	this
throw	KEYWORD1	
throws	KEYWORD1	
transient	KEYWORD1
true	KEYWORD1	true
try	KEYWORD1	try
void	KEYWORD1	void
volatile	KEYWORD1
while	KEYWORD1	while

# Deprecated API

arraycopy	KEYWORD2	arrayCopy_
openStream	KEYWORD2	openStream_
OPENGL	LITERAL2	size_
JAVA2D	LITERAL2	size_


# KEYWORD2 specifies functions and KEYWORD3 specifies methods
# These items are a part of Processing but are not included in the reference

boolean	KEYWORD2	booleanconvert_
byte	KEYWORD2	byteconvert_
cache	KEYWORD2
char	KEYWORD2	charconvert_
color KEYWORD1	color_datatype
start	KEYWORD2
stop	KEYWORD2
breakShape	KEYWORD2
createPath	KEYWORD2
float	KEYWORD2	floatconvert_
int	KEYWORD2	intconvert_
loadMatrix	KEYWORD2
noHint	KEYWORD2
parseBoolean	KEYWORD2
parseByte	KEYWORD2
parseChar	KEYWORD2
parseFloat	KEYWORD2
parseInt	KEYWORD2
saveFile	KEYWORD2
savePath	KEYWORD2
sketchFile	KEYWORD2
sketchPath	KEYWORD2
string	KEYWORD2	strconvert_

#KEYWORD3 is an experimental designation for methods
readLine	KEYWORD3	BufferedReader_readLine_
close	KEYWORD3	PrintWriter_close_
flush	KEYWORD3	PrintWriter_flush_
print	KEYWORD3	PrintWriter_print_
println	KEYWORD3	PrintWriter_println_
charAt	KEYWORD3	String_charAt_
equals	KEYWORD3	String_equals_
indexOf	KEYWORD3	String_indexOf_
length	KEYWORD3	String_length_
substring	KEYWORD3	String_substring_
toLowerCase	KEYWORD3	String_toLowerCase_
toUpperCase	KEYWORD3	String_toUpperCase_


# Operators are without KEYWORDS

+=		addassign
+		addition
[]		arrayaccess
=		assign
&		bitwiseAND
|		bitwiseOR
,		comma
//		comment
?		conditional
{}		curlybraces
--		decrement
/		divide
/=		divideassign
/**		doccomment
.		dot
==		equality
>		greaterthan
>=		greaterthanorequalto
++		increment
!=		inequality
<<		leftshift
<		lessthan
<=		lessthanorequalto
&&		logicalAND
!		logicalNOT
||		logicalOR
-		minus
%		modulo
/*		multilinecomment
*		multiply
*=		multiplyassign
()		parentheses
<<		rightshift
;		semicolon
-=		subtractassign


# THE TEXT ABOVE IS HAND-WRITTEN AND FOUND IN THE FILE "keywords_base.txt"
# THE TEXT BELOW IS AUTO-GENERATED
