<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>bezierTangent()</name>

<category>Shape</category>

<subcategory>Curves</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>bezierTangent_.gif</image>
<code><![CDATA[
noFill();
bezier(85, 20, 10, 10, 90, 90, 15, 80);
int steps = 6;
fill(255);
for (int i = 0; i &lt;= steps; i++) {
  float t = i / float(steps);
  // Get the location of the point
  float x = bezierPoint(85, 10, 90, 15, t);
  float y = bezierPoint(20, 10, 90, 80, t);
  // Get the tangent points
  float tx = bezierTangent(85, 10, 90, 15, t);
  float ty = bezierTangent(20, 10, 90, 80, t);
  // Calculate an angle from the tangent points
  float a = atan2(ty, tx);
  a += PI;
  stroke(255, 102, 0);
  line(x, y, cos(a)*30 + x, sin(a)*30 + y);
  // This follwing line of code makes a line 
  // inverse of the above line
  //line(x, y, cos(a)*-30 + x, sin(a)*-30 + y);
  stroke(0);
  ellipse(x, y, 5, 5);
}
]]></code>
</example>

<example>
<image>bezierTangent_2.gif</image>
<code><![CDATA[
noFill();
bezier(85, 20, 10, 10, 90, 90, 15, 80);
stroke(255, 102, 0);
int steps = 16;
for (int i = 0; i &lt;= steps; i++) {
  float t = i / float(steps);
  float x = bezierPoint(85, 10, 90, 15, t);
  float y = bezierPoint(20, 10, 90, 80, t);
  float tx = bezierTangent(85, 10, 90, 15, t);
  float ty = bezierTangent(20, 10, 90, 80, t);
  float a = atan2(ty, tx);
  a -= HALF_PI;
  line(x, y, cos(a)*8 + x, sin(a)*8 + y);
}
]]></code>
</example>

<description><![CDATA[Calculates the tangent of a point on a Bezier curve. There is a good definition of "tangent" at Wikipedia: <a href="http://en.wikipedia.org/wiki/Tangent" target="new">http://en.wikipedia.org/wiki/Tangent</a>]]></description>

<syntax><![CDATA[
bezierTangent(<kbd>a</kbd>, <kbd>b</kbd>, <kbd>c</kbd>, <kbd>d</kbd>, <kbd>t</kbd>)
]]></syntax>

<parameter>
<label>a</label>
<description><![CDATA[int or float: coordinate of first point on the curve]]></description>
</parameter>

<parameter>
<label>b</label>
<description><![CDATA[int or float: coordinate of first control point]]></description>
</parameter>

<parameter>
<label>c</label>
<description><![CDATA[int or float: coordinate of second control point]]></description>
</parameter>

<parameter>
<label>d</label>
<description><![CDATA[int or float: coordinate of second point on the curve]]></description>
</parameter>

<parameter>
<label>t</label>
<description><![CDATA[float: value between 0 and 1 ]]></description>
</parameter>

<returns></returns>

<related>
bezier()
bezierVertex()
curvePoint()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>

</root>
