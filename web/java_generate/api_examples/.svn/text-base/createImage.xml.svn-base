<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>createImage()</name>

<category>Image</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>


<example>
<image>createImage.jpg</image>
<code><![CDATA[
PImage img = createImage(66, 66, RGB);
img.loadPixels();
for (int i = 0; i &lt; img.pixels.length; i++) {
  img.pixels[i] = color(0, 90, 102); 
}
img.updatePixels();
image(img, 17, 17);
]]></code>
</example>

<example>
<image>createImage_2.jpg</image>
<code><![CDATA[
PImage img = createImage(66, 66, ARGB);
img.loadPixels();
for (int i = 0; i &lt; img.pixels.length; i++) {
  img.pixels[i] = color(0, 90, 102, i % img.width * 2); 
}
img.updatePixels();
image(img, 17, 17);
image(img, 34, 34);
]]></code>
</example>

<description><![CDATA[
Creates a new PImage (the datatype for storing images). This provides a fresh buffer of pixels to play with. Set the size of the buffer with the <b>width</b> and <b>height</b> parameters. The <b>format</b> parameter defines how the pixels are stored. See the PImage reference for more information.
<br/> <br/>
Be sure to include all three parameters, specifying only the width and height (but no format) will produce a strange error.
<br/> <br/>
Advanced users please note that createImage() should be used instead of the syntax <tt>new PImage()</tt>. 
]]></description>

<syntax><![CDATA[
createImage(<kbd>width</kbd>, <kbd>height</kbd>, <kbd>format</kbd>)
]]></syntax>

<parameter>
<label>width</label>
<description><![CDATA[int: width in pixels]]></description>
</parameter>

<parameter>
<label>height</label>
<description><![CDATA[int: height in pixels]]></description>
</parameter>

<parameter>
<label>format</label>
<description><![CDATA[Either RGB, ARGB, ALPHA (grayscale alpha channel)]]></description>
</parameter>

<returns>PImage or null</returns>

<related>
PImage
PGraphics
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>



</root>
