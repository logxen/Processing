<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>beginCamera()</name>

<category>Lights, Camera</category>

<subcategory>Camera</subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>beginCamera_.gif</image>
<code><![CDATA[
// The image for this example has not been updated.
size(100, 100, P3D);
noFill();

beginCamera();
camera();
rotateX(-PI/6);
endCamera();

translate(50, 50, 0);
rotateY(PI/3);
box(45);
]]></code>
</example>

<description><![CDATA[The <b>beginCamera()</b> and <b>endCamera()</b> functions enable advanced customization of the camera space. The functions are useful if you want to more control over camera movement, however for most users, the <b>camera()</b> function will be sufficient.<br /><br />The camera functions will replace any transformations (such as <b>rotate()</b> or <b>translate()</b>) that occur before them in <b>draw()</b>, but they will not automatically replace the camera transform itself. For this reason, camera functions should be placed at the beginning of <b>draw()</b> (so that transformations happen afterwards), and the <b>camera()</b> function can be used after <b>beginCamera()</b> if you want to reset the camera before applying transformations.<br /><br />This function sets the matrix mode to the camera matrix so calls such as <b>translate()</b>, <b>rotate()</b>, applyMatrix() and resetMatrix() affect the camera. <b>beginCamera()</b> should always be used with a following <b>endCamera()</b> and pairs of <b>beginCamera()</b> and <b>endCamera()</b> cannot be nested.]]></description>

<syntax><![CDATA[
beginCamera()
]]></syntax>

<parameter>
<label></label>
<description></description>
</parameter>

<returns>None</returns>

<related>
camera()
endCamera()
applyMatrix()
resetMatrix()
translate()
rotate()
scale()
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>


</root>
