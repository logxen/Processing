<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>createGraphics()</name>

<category>Rendering</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image>pgraphics.jpg</image>
<code><![CDATA[
PGraphics pg;

void setup() {
  size(100, 100);
  pg = createGraphics(80, 80, P3D);
}

void draw() {
  pg.beginDraw();
  pg.background(102);
  pg.stroke(255);
  pg.line(40, 40, mouseX, mouseY);
  pg.endDraw();
  image(pg, 10, 10); 
}
]]></code>
</example>

<description><![CDATA[
Creates and returns a new <b>PGraphics</b> object of the types P2D, P3D, and JAVA2D. Use this class if you need to draw into an off-screen graphics buffer. It's not possible to use <b>createGraphics()</b> with OPENGL, because it doesn't allow offscreen use. The DXF and PDF renderers require the filename parameter. 
<br/> <br/>
It's important to call any drawing commands between beginDraw() and endDraw() statements. This is also true for any commands that affect drawing, such as smooth() or colorMode().
<br/> <br/>
Unlike the main drawing surface which is completely opaque, surfaces created with createGraphics() can have transparency. This makes it possible to draw into a graphics and maintain the alpha channel. By using save() to write a PNG or TGA file, the transparency of the graphics object will be honored. Note that transparency levels are binary: pixels are either complete opaque or transparent. For the time being (as of release 0127), this means that text characters will be opaque blocks. This will be fixed in a future release (<A HREF="http://dev.processing.org/bugs/show_bug.cgi?id=641">Bug 641</A>).
]]></description>

<syntax><![CDATA[
createGraphics(<kbd>width</kbd>, <kbd>height</kbd>, <kbd>renderer</kbd>)
createGraphics(<kbd>width</kbd>, <kbd>height</kbd>, <kbd>renderer</kbd>, <kbd>filename</kbd>)
]]></syntax>

<parameter>
<label>width</label>
<description><![CDATA[int: width in pixels]]></description>
</parameter>

<parameter>
<label>height</label>
<description><![CDATA[int: height in pixels]]></description>
</parameter>

<parameter>
<label>renderer</label>
<description><![CDATA[Either P2D (not yet implemented), P3D, JAVA2D, PDF, DXF]]></description>
</parameter>

<parameter>
<label>filename</label>
<description><![CDATA[String: the name of the file]]></description>
</parameter>

<returns>PImage or null</returns>

<related>
PGraphics
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>Core</partof>

<level>Extended</level>






</root>
