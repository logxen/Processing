<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>movieEvent()</name>

<category>Movie</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
import processing.video.*;
Movie myMovie;

void setup() {
  size(200, 200);
  myMovie = new Movie(this, "totoro.mov");
  myMovie.loop();
}

void draw() {
  image(myMovie, 0, 0);
}

// Called every time a new frame is available to read
void movieEvent(Movie m) {
  m.read();
}

]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
import processing.video.*;
Movie myMovie, yourMovie;

void setup() {
  size(200, 200);
  myMovie = new Movie(this, "totoro.mov");
  yourMovie = new Movie(this, "catbus.mov");
  myMovie.play();
  yourMovie.play();
}

void draw() {
  image(myMovie, 0, 0);
  image(yourMovie, 100, 0);  
}

void movieEvent(Movie m) {
  if (m == myMovie) {
    myMovie.read();
  } else if (m == yourMovie) {
    yourMovie.read();
  }
}

]]></code>
</example>

<description><![CDATA[
Called when a new movie frame is available. Use the <b>read()</b> method to capture this frame. If there is more than one movie in the program, <b>movieEvent()</b> is called each time any of the movies has a new frame available. Use an <b>if</b> to determine which movie is triggering the event. See the above example for implementation details.
]]></description>

<syntax>
void movieEvent(Movie <c>which</c>) {
  <c>statements</c>
}
</syntax>

<parameter>
<label>statements</label>
<description><![CDATA[any valid statements]]></description>
</parameter>

<parameter>
<label>which</label>
<description><![CDATA[the movie with the event]]></description>
</parameter>

<returns></returns>

<related>
Movie
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>core</partof>








</root>
