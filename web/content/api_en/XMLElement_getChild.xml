<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>getChild()</name>

<category>XMLElement</category>

<subcategory>Method</subcategory>

<type></type>

<example>
<image></image>
<code><![CDATA[
// The following short XML file called "sites.xml" is parsed 
// in the code below. It must be in the project's "data" directory
// &#60;?xml version="1.0"?&#62;
// &#60;websites&#62;
//   &#60;site id="0" url="processing.org"&#62;Processing&#60;/site&#62;
//   &#60;site id="1" url="mobile.processing.org"&#62;Processing Mobile&#60;/site&#62;
// &#60;/websites&#62;

XMLElement xml;

void setup() {
  size(200, 200);
  xml = new XMLElement(this, "sites.xml");
  XMLElement kid = xml.getChild(0);
  String site = kid.getContent();
  println(site);    
}
]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
void setup() {
  // Download RSS feed of news stories from yahoo.com
  String url = "http://rss.news.yahoo.com/rss/topstories";
  XMLElement rss = new XMLElement(this, url);
  // Get the &#60;description&#62; element from inside &#60;channel&#62;
  XMLElement desc = rss.getChild("channel/description");
  println(desc.getContent());
}
]]></code>
</example>


<description><![CDATA[
Returns the child XMLElement as specified by the <b>index</b> parameter. The value of the <b>index</b> parameter must be less than the total number of children to avoid going out of the array storing the child elements.
When the <b>path</b> parameter is specified, then it will return all children that match that path. The path is a series of elements and sub-elements, separated by slashes.
]]></description>

</root>
