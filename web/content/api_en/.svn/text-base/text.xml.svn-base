<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>text()</name>

<category>Typography</category>

<subcategory>Loading &amp; Displaying</subcategory>

<type></type>

<example>
<image>text_0.png</image>
<code><![CDATA[
PFont font;
// The font must be located in the sketch's 
// "data" directory to load successfully
font = loadFont("LetterGothicStd-32.vlw");
textFont(font);
text("word", 10, 30); 
fill(0, 102, 153);
text("word", 10, 60);
fill(0, 102, 153, 51);
text("word", 10, 90); 
]]></code>
</example>

<example>
<image>text_1.png</image>
<code><![CDATA[
size(100, 100, P3D);
PFont font;
font = loadFont("LetterGothicStd-32.vlw"); 
textFont(font); 
text("word", 15, 60, -30);  // Specify a z-axis value
fill(0, 102, 153);
text("word", 15, 60);  // Default depth, no z-value specified
]]></code>
</example>

<example>
<image>text_2.png</image>
<code><![CDATA[
String s = "The quick brown fox jumped over the lazy dog.";
fill(50);
text(s, 10, 10, 70, 80);  // Text wraps within text box
]]></code>
</example>

<js_mode>
	<description><![CDATA[
Font support for the Canvas element varies across browsers. FireFox currently has the best support, but still uses a pre-defined set of fonts. (Documentation to follow soon.) Good alternatives to the browser's Canvas-font functions are available: such as the <a href="http://bocoup.com/processing-js/docs/index.php?page=Cross-Browser%20Canvas%20Fonts">Glyph method</a>. See also: <a href="http://jim.studt.net/canvastext/">Canvas Text</a>, <a href="http://canvas.burnttoys.net/bauhaus.html">BurntToys Bauhaus</a>.
<br /><br />
<p><b>Please use the follwoing demos to learn how fonts can be rendered in Firefox with Processing.js: <a href="http://processingjs.org/learning/basic/letters">Letters</a>, <a href="http://processingjs.org/learning/basic/words">Words</a>, <a href="http://processingjs.org/source/text-width/text-width.html">width()</a></b></p>
]]></description>
</js_mode>

<description><![CDATA[
Draws text to the screen. Displays the information specified in the <b>data</b> or <b>stringdata</b> parameters on the screen in the position specified by the <b>x</b> and <b>y</b> parameters and the optional <b>z</b> parameter. A default font will be used unless a font is set with the <b>textFont()</b> function. Change the color of the text with the <b>fill()</b> function. The text displays in relation to the <b>textAlign()</b> function, which gives the option to draw to the left, right, and center of the coordinates.<br/>
<br/>
The <b>x2</b> and <b>y2</b> parameters define a rectangular area to display within and may only be used with string data. When these parameters are specified, they are interpreted based on the current <b>rectMode()</b> setting. Text that does not fit completely within the rectangle specified will not be drawn to the screen.<br/>
<br/>
Note that Processing now lets you call <b>text()</b> without first specifying a PFont with <b>textFont()</b>. In that case, a generic sans-serif font will be used instead. (See the third example above.)
]]></description>

</root>
