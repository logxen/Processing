<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>readBytes()</name>

<category>Client</category>

<subcategory>Client</subcategory>

<usage>Application</usage>

<example>
<image></image>
<code><![CDATA[
// Example by Tom Igoe
 
// Creates a client that listens for input and puts 
// the bytes it gets into a byte[] buffer.

import processing.net.*; 
Client myClient; 
byte[] byteBuffer = new byte[10];

void setup() { 
  size (300, 100);
  // Connect to the local machine at port 10002.
  // This example will not run if you haven't
  // previously started a server on this port.
  myClient = new Client(this, "127.0.0.1", 10002); 
} 

void draw() { 
  if (myClient.available() > 0) { 
    background(0);
    // Read in the bytes
    int byteCount = myClient.readBytes(byteBuffer); 
    if (byteCount > 0 ) {
      // Convert the byte array to a String
      String myString = new String(byteBuffer);
      // Show it text area
      println(myString); 
    } 
  }
} 

]]></code>
</example>

<description><![CDATA[
Reads a group of bytes from the buffer. The version with no parameters returns a byte array of all data in the buffer. This is not efficient, but is easy to use. The version with the <b>byteBuffer</b> parameter is more memory and time efficient. It grabs the data in the buffer and puts it into the byte array passed in and returns an int value for the number of bytes read. If more bytes are available than can fit into the <b>byteBuffer</b>, only those that fit are read.
]]></description>


</root>
