<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>blue()</name>

<category>Color</category>

<subcategory>Creating &amp; Reading</subcategory>

<type></type>

<example>
<image>blue_.png</image>
<code><![CDATA[
color c = color(175, 100, 220);  // Define color 'c'
fill(c);  // Use color variable 'c' as fill color
rect(15, 20, 35, 60);  // Draw left rectangle

float blueValue = blue(c);  // Get blue in 'c'
println(blueValue);  // Prints "220.0"
fill(0, 0, blueValue);  // Use 'blueValue' in new fill
rect(50, 20, 35, 60);  // Draw right rectangle
]]></code>
</example>

<description><![CDATA[
Extracts the blue value from a color, scaled to match current <b>colorMode()</b>. The value is always returned as a float, so be careful not to assign it to an int value.<br />
<br />
The <b>blue()</b> function is easy to use and understand, but it is slower than a technique called bit masking. When working in <b>colorMode(RGB, 255)</b>, you can acheive the same results as <b>blue()</b> but with greater speed by using a bit mask to remove the other color components. For example, the following two lines of code are equivalent means of getting the blue value of the color value <b>c</b>:<br />
<br />
<pre>float b1 = blue(c);   // Simpler, but slower to calculate
float b2 = c & 0xFF;  // Very fast to calculate</pre>
]]></description>

</root>
