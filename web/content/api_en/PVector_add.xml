<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>add()</name>

<category>PVector</category>

<subcategory>Method</subcategory>

<type></type>

<example>
<image></image>
<code><![CDATA[
PVector v1, v2;

void setup() {
  noLoop();
  v1 = new PVector(40, 20, 0);
  v2 = new PVector(25, 50, 0); 
}

void draw() {
  ellipse(v1.x, v1.y, 12, 12);
  ellipse(v2.x, v2.y, 12, 12);
  v2.add(v1);
  ellipse(v2.x, v2.y, 24, 24);
}
]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
PVector v;

void setup() {
  noLoop();
  v = new PVector(40, 20, 0);
}

void draw() {
  ellipse(v.x, v.y, 12, 12);
  ellipse(25, 50, 12, 12);
  v.add(25, 50, 0);
  ellipse(v.x, v.y, 24, 24);
}
]]></code>
</example>

<example>
<image></image>
<code><![CDATA[
PVector v1, v2;

void setup() {
  noLoop();
  v1 = new PVector(40, 20, 0);
  v2 = new PVector(25, 50, 0); 
}

void draw() {
  ellipse(v1.x, v1.y, 12, 12);
  ellipse(v2.x, v2.y, 12, 12);
  PVector v3 = PVector.add(v1, v2);
  ellipse(v3.x, v3.y, 24, 24);
}
]]></code>
</example>


<description><![CDATA[
Adds x, y, and z components to a vector, adds one vector to another, or adds two independent vectors together. The version of the method that adds two vectors together is a static method and returns a PVector, the others have no return value -- they act directly on the vector. See the examples for more context.
]]></description>

</root>
